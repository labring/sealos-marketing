apiVersion: app.sealos.io/v1
kind: Instance
metadata:
  name: affine-eatmjhtp
  labels:
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
spec:
  gitRepo: https://github.com/toeverything/AFFiNE
  templateType: inline
  categories:
    - tool
  defaults:
    app_host:
      type: string
      value: affine-aanwibpg
    app_name:
      type: string
      value: affine-eatmjhtp
  inputs: null
  title: AFFiNE
  url: https://affine.pro/
  author: Sealos
  description: >-
    A privacy-focussed, local-first, open-source, and ready-to-use alternative
    for Notion & Miro.
  readme: https://cdn.jsdelivr.net/gh/toeverything/AFFiNE@canary/README.md
  icon: >-
    https://cdn.jsdelivr.net/gh/toeverything/AFFiNE@canary/packages/frontend/core/public/favicon-144.png
  deployCount: 6

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: affine-eatmjhtp-redis
    app.kubernetes.io/instance: affine-eatmjhtp-redis
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
  name: affine-eatmjhtp-redis

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: affine-eatmjhtp-pg
    app.kubernetes.io/instance: affine-eatmjhtp-pg
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
  name: affine-eatmjhtp-pg

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: affine-eatmjhtp
  annotations:
    originImageName: ghcr.io/toeverything/affine-graphql:stable-4b9e2ab
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: affine-eatmjhtp
    app: affine-eatmjhtp
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: affine-eatmjhtp
  selector:
    matchLabels:
      app: affine-eatmjhtp
  template:
    metadata:
      labels:
        app: affine-eatmjhtp
    spec:
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: false
      containers:
        - name: affine-eatmjhtp
          image: ghcr.io/toeverything/affine-graphql:stable-4b9e2ab
          command:
            - sh
            - '-c'
            - node ./scripts/self-host-predeploy && node ./dist/index.js
          env:
            - name: NODE_OPTIONS
              value: '--import=./scripts/register.js'
            - name: AFFINE_CONFIG_PATH
              value: /root/.affine/config
            - name: REDIS_SERVER_HOST
              valueFrom:
                secretKeyRef:
                  name: affine-eatmjhtp-redis-conn-credential
                  key: host
            - name: REDIS_SERVER_USER
              valueFrom:
                secretKeyRef:
                  name: affine-eatmjhtp-redis-conn-credential
                  key: username
            - name: REDIS_SERVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: affine-eatmjhtp-redis-conn-credential
                  key: password
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: affine-eatmjhtp-pg-conn-credential
                  key: password
            - name: DATABASE_URL
              value: >-
                postgresql://postgres:$(PG_PASSWORD)@affine-eatmjhtp-pg-postgresql..svc:5432/affine
            - name: NODE_ENV
              value: production
          resources:
            requests:
              cpu: 100m
              memory: 204Mi
            limits:
              cpu: 1000m
              memory: 2048Mi
          ports:
            - name: http
              protocol: TCP
              containerPort: 3010
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: vn-rootvn-vn-affinevn-storage
              mountPath: /root/.affine/storage
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 20
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 20
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /root/.affine/storage
          value: '1'
        name: vn-rootvn-vn-affinevn-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: affine-eatmjhtp
  labels:
    cloud.sealos.io/app-deploy-manager: affine-eatmjhtp
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
spec:
  ports:
    - port: 3010
  selector:
    app: affine-eatmjhtp

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: affine-eatmjhtp
  labels:
    cloud.sealos.io/app-deploy-manager: affine-eatmjhtp
    cloud.sealos.io/app-deploy-manager-domain: affine-aanwibpg
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: affine-aanwibpg.sealoshzh.site
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: affine-eatmjhtp
                port:
                  number: 3010
  tls:
    - hosts:
        - affine-aanwibpg.sealoshzh.site
      secretName: wildcard-cert

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: postgresql
    clusterversion.kubeblocks.io/name: postgresql-14.8.0
    sealos-db-provider-cr: affine-eatmjhtp-pg
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
  annotations: {}
  name: affine-eatmjhtp-pg
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: postgresql
  clusterVersionRef: postgresql-14.8.0
  componentSpecs:
    - componentDefRef: postgresql
      monitor: true
      name: postgresql
      replicas: 1
      resources:
        limits:
          cpu: 1000m
          memory: 1024Mi
        requests:
          cpu: 100m
          memory: 102Mi
      serviceAccountName: affine-eatmjhtp-pg
      switchPolicy:
        type: Noop
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi
            storageClassName: openebs-backup
  terminationPolicy: Delete
  tolerations: []

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: affine-eatmjhtp-pg
    app.kubernetes.io/instance: affine-eatmjhtp-pg
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
  name: affine-eatmjhtp-pg
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: affine-eatmjhtp-pg
    app.kubernetes.io/instance: affine-eatmjhtp-pg
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
  name: affine-eatmjhtp-pg
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: affine-eatmjhtp-pg
subjects:
  - kind: ServiceAccount
    name: affine-eatmjhtp-pg

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: redis
    clusterversion.kubeblocks.io/name: redis-7.0.6
    sealos-db-provider-cr: affine-eatmjhtp-redis
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
  annotations: {}
  name: affine-eatmjhtp-redis
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: redis
  clusterVersionRef: redis-7.0.6
  componentSpecs:
    - componentDefRef: redis
      monitor: true
      name: redis
      replicas: 1
      resources:
        limits:
          cpu: 1000m
          memory: 1024Mi
        requests:
          cpu: 100m
          memory: 102Mi
      serviceAccountName: affine-eatmjhtp-redis
      switchPolicy:
        type: Noop
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 3Gi
            storageClassName: openebs-backup
    - componentDefRef: redis-sentinel
      monitor: true
      name: redis-sentinel
      replicas: 1
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 100m
          memory: 100Mi
      serviceAccountName: affine-eatmjhtp-redis
  terminationPolicy: Delete
  tolerations: []

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: affine-eatmjhtp-redis
    app.kubernetes.io/instance: affine-eatmjhtp-redis
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
  name: affine-eatmjhtp-redis
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: affine-eatmjhtp-redis
    app.kubernetes.io/instance: affine-eatmjhtp-redis
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
  name: affine-eatmjhtp-redis
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: affine-eatmjhtp-redis
subjects:
  - kind: ServiceAccount
    name: affine-eatmjhtp-redis

---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: affine-eatmjhtp
  labels:
    cloud.sealos.io/app-deploy-manager: affine-eatmjhtp
    cloud.sealos.io/deploy-on-sealos: affine-eatmjhtp
spec:
  data:
    url: https://affine-aanwibpg.sealoshzh.site
  displayType: normal
  icon: >-
    https://raw.githubusercontent.com/toeverything/AFFiNE/canary/packages/frontend/core/public/favicon-144.png
  name: affine-eatmjhtp
  type: iframe
