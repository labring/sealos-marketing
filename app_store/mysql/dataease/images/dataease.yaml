apiVersion: app.sealos.io/v1
kind: Instance
metadata:
  name: dataease-cpnftcot
  labels:
    cloud.sealos.io/deploy-on-sealos: dataease-cpnftcot
spec:
  gitRepo: https://github.com/dataease/dataease
  templateType: inline
  categories:
    - database
    - low-code
  defaults:
    app_host:
      type: string
      value: ldzqrbmz
    app_name:
      type: string
      value: dataease-cpnftcot
  inputs: null
  title: DataEase
  url: dataease.io
  author: Sealos
  description: üî• ‰∫∫‰∫∫ÂèØÁî®ÁöÑÂºÄÊ∫êÊï∞ÊçÆÂèØËßÜÂåñÂàÜÊûêÂ∑•ÂÖ∑ÔºåÂ∏ÜËΩØ„ÄÅTableau Á≠âÂïÜ‰∏ö BI Â∑•ÂÖ∑ÁöÑÂºÄÊ∫êÊõø‰ª£„ÄÇ
  readme: https://cdn.jsdelivr.net/gh/dataease/dataease@dev-v2/README.md
  icon: https://avatars.githubusercontent.com/u/75054108?s=48&v=4
  deployCount: 4

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dataease-cpnftcot
  annotations:
    originImageName: registry.cn-qingdao.aliyuncs.com/dataease/dataease:v2.6.1
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: dataease-cpnftcot
    app: dataease-cpnftcot
    cloud.sealos.io/deploy-on-sealos: dataease-cpnftcot
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: dataease-cpnftcot
  selector:
    matchLabels:
      app: dataease-cpnftcot
  template:
    metadata:
      labels:
        app: dataease-cpnftcot
    spec:
      automountServiceAccountToken: false
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
      initContainers:
        - name: init-config
          image: busybox:1.36.1
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: dataease-cpnftcot-mysql-conn-credential
                  key: host
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: dataease-cpnftcot-mysql-conn-credential
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dataease-cpnftcot-mysql-conn-credential
                  key: password
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: dataease-cpnftcot-mysql-conn-credential
                  key: port
          command:
            - sh
            - '-c'
            - |
              if [ ! -f /opt/apps/config/application.yml ]; then
                mkdir -p /opt/apps/config &&
                cat <<EOF > /opt/apps/config/application.yml
              server:
                tomcat:
                  connection-timeout: 70000
              spring:
                servlet:
                  multipart:
                    max-file-size: 500MB
                    max-request-size: 500MB
                datasource:
                  url: jdbc:mysql://${DB_HOST}..svc:${DB_PORT}/dataease?autoReconnect=false&useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
                  username: ${DB_USER}
                  password: ${DB_PASSWORD}
              EOF

              fi
          volumeMounts:
            - name: vn-optvn-appsvn-config
              mountPath: /opt/apps/config
      containers:
        - name: dataease-cpnftcot
          image: registry.cn-qingdao.aliyuncs.com/dataease/dataease:v2.6.1
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 2
              memory: 2Gi
          ports:
            - containerPort: 8100
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: vn-optvn-appsvn-config
              mountPath: /opt/apps/config
            - name: vn-optvn-dataease2vn-0vn-logs
              mountPath: /opt/dataease2.0/logs
            - name: vn-optvn-dataease2vn-0vn-datavn-static-resource
              mountPath: /opt/dataease2.0/data/static-resource
            - name: vn-optvn-dataease2vn-0vn-cache
              mountPath: /opt/dataease2.0/cache
            - name: vn-optvn-dataease2vn-0vn-datavn-geo
              mountPath: /opt/dataease2.0/data/geo
            - name: vn-optvn-dataease2vn-0vn-datavn-appearance
              mountPath: /opt/dataease2.0/data/appearance
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /opt/apps/config
          value: '1'
        name: vn-optvn-appsvn-config
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /opt/dataease2.0/logs
          value: '1'
        name: vn-optvn-dataease2vn-0vn-logs
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /opt/dataease2.0/data/static-resource
          value: '1'
        name: vn-optvn-dataease2vn-0vn-datavn-static-resource
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /opt/dataease2.0/cache
          value: '1'
        name: vn-optvn-dataease2vn-0vn-cache
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /opt/dataease2.0/data/geo
          value: '1'
        name: vn-optvn-dataease2vn-0vn-datavn-geo
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /opt/dataease2.0/data/appearance
          value: '1'
        name: vn-optvn-dataease2vn-0vn-datavn-appearance
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: dataease-cpnftcot
  labels:
    cloud.sealos.io/app-deploy-manager: dataease-cpnftcot
    cloud.sealos.io/deploy-on-sealos: dataease-cpnftcot
spec:
  ports:
    - port: 8100
  selector:
    app: dataease-cpnftcot

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dataease-cpnftcot
  labels:
    cloud.sealos.io/app-deploy-manager: dataease-cpnftcot
    cloud.sealos.io/app-deploy-manager-domain: ldzqrbmz
    cloud.sealos.io/deploy-on-sealos: dataease-cpnftcot
  annotations:
    higress.io/response-header-control-remove: X-Frame-Options
    higress.io/response-header-control-update: >
      Content-Security-Policy "default-src * blob: data: *.sealoshzh.site
      sealoshzh.site; img-src * data: blob: resource: *.sealoshzh.site
      sealoshzh.site; connect-src * wss: blob: resource:; style-src 'self'
      'unsafe-inline' blob: *.sealoshzh.site sealoshzh.site resource:;
      script-src 'self' 'unsafe-inline' 'unsafe-eval' blob: *.sealoshzh.site
      sealoshzh.site resource: *.baidu.com *.bdstatic.com; frame-src 'self'
      *.sealoshzh.site sealoshzh.site mailto: tel: weixin: mtt: *.baidu.com;
      frame-ancestors 'self' https://sealoshzh.site https://*.sealoshzh.site"

      X-Xss-Protection "1; mode=block"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: >
      more_clear_headers "X-Frame-Options:";

      more_set_headers "Content-Security-Policy: default-src * blob: data:
      *.sealoshzh.site sealoshzh.site; img-src * data: blob: resource:
      *.sealoshzh.site sealoshzh.site; connect-src * wss: blob: resource:;
      style-src 'self' 'unsafe-inline' blob: *.sealoshzh.site sealoshzh.site
      resource:; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob:
      *.sealoshzh.site sealoshzh.site resource: *.baidu.com *.bdstatic.com;
      frame-src 'self' *.sealoshzh.site sealoshzh.site mailto: tel: weixin: mtt:
      *.baidu.com; frame-ancestors 'self' https://sealoshzh.site
      https://*.sealoshzh.site";

      more_set_headers "X-Xss-Protection: 1; mode=block";

      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ldzqrbmz.sealoshzh.site
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: dataease-cpnftcot
                port:
                  number: 8100
  tls:
    - hosts:
        - ldzqrbmz.sealoshzh.site
      secretName: wildcard-cert

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: dataease-cpnftcot-mysql
    app.kubernetes.io/instance: dataease-cpnftcot-mysql
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: dataease-cpnftcot
  name: dataease-cpnftcot-mysql

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: apecloud-mysql
    clusterversion.kubeblocks.io/name: ac-mysql-8.0.30
    cloud.sealos.io/deploy-on-sealos: dataease-cpnftcot
  name: dataease-cpnftcot-mysql
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: apecloud-mysql
  clusterVersionRef: ac-mysql-8.0.30
  componentSpecs:
    - componentDefRef: mysql
      monitor: true
      name: mysql
      replicas: 1
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 51Mi
      serviceAccountName: dataease-cpnftcot-mysql
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: openebs-backup
  terminationPolicy: Delete
  tolerations: []

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: dataease-cpnftcot-mysql
    app.kubernetes.io/instance: dataease-cpnftcot-mysql
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: dataease-cpnftcot
  name: dataease-cpnftcot-mysql
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: dataease-cpnftcot-mysql
    app.kubernetes.io/instance: dataease-cpnftcot-mysql
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: dataease-cpnftcot
  name: dataease-cpnftcot-mysql
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dataease-cpnftcot-mysql
subjects:
  - kind: ServiceAccount
    name: dataease-cpnftcot-mysql

---
apiVersion: batch/v1
kind: Job
metadata:
  name: dataease-cpnftcot-mysql-init
  labels:
    cloud.sealos.io/deploy-on-sealos: dataease-cpnftcot
spec:
  completions: 1
  template:
    spec:
      containers:
        - name: mysql-init
          image: docker.io/arey/mysql-client:latest
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: dataease-cpnftcot-mysql-conn-credential
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dataease-cpnftcot-mysql-conn-credential
                  key: password
            - name: MYSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: dataease-cpnftcot-mysql-conn-credential
                  key: host
            - name: MYSQL_PORT
              valueFrom:
                secretKeyRef:
                  name: dataease-cpnftcot-mysql-conn-credential
                  key: port
          command:
            - /bin/sh
            - '-c'
            - >
              echo "CREATE DATABASE dataease DEFAULT CHARACTER SET utf8mb4
              COLLATE utf8mb4_0900_ai_ci;" > /create.sql

              until mysql -h $MYSQL_HOST -P $MYSQL_PORT -u $MYSQL_USER
              -p$MYSQL_PASSWORD -e 'source /create.sql;' &>/dev/null; do sleep
              1; done
      restartPolicy: Never
  backoffLimit: 0
  ttlSecondsAfterFinished: 300

---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: dataease-cpnftcot
  labels:
    cloud.sealos.io/app-deploy-manager: dataease-cpnftcot
    cloud.sealos.io/deploy-on-sealos: dataease-cpnftcot
spec:
  data:
    url: https://ldzqrbmz.sealoshzh.site
  displayType: normal
  icon: https://dataease.io/docs/v2/img/logo-white.png
  name: DataEase
  type: iframe
