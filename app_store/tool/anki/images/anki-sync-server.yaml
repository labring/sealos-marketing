apiVersion: app.sealos.io/v1
kind: Instance
metadata:
  name: anki-sync-server-epacrnvz
  labels:
    cloud.sealos.io/deploy-on-sealos: anki-sync-server-epacrnvz
spec:
  gitRepo: https://github.com/yangchuansheng/anki-sync-server
  templateType: inline
  categories:
    - tool
  defaults:
    app_name:
      type: string
      value: anki-sync-server-epacrnvz
    app_host:
      type: string
      value: hsaxfmwo
  inputs:
    SYNC_USER1:
      description: 'the first user and password for Anki Sync Serverï¼Œformat: "user:pass"'
      type: string
      default: user:pass
      required: false
    MAX_SYNC_PAYLOAD_MEGS:
      description: limit on uploads
      type: string
      default: '100'
      required: false
  title: anki-sync-server
  url: https://docs.ankiweb.net/sync-server.html
  author: Sealos
  description: Self-Hosted Anki Sync Server
  readme: https://cdn.jsdelivr.net/gh/yangchuansheng/anki-sync-server@main/README.md
  icon: >-
    https://cdn.jsdelivr.net/gh/yangchuansheng/anki-sync-server@main/images/logo.jpeg
  deployCount: 12

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: anki-sync-server-epacrnvz
  annotations:
    originImageName: ghcr.io/yangchuansheng/anki-sync-server:24.06.3
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: anki-sync-server-epacrnvz
    app: anki-sync-server-epacrnvz
    cloud.sealos.io/deploy-on-sealos: anki-sync-server-epacrnvz
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: anki-sync-server-epacrnvz
  selector:
    matchLabels:
      app: anki-sync-server-epacrnvz
  template:
    metadata:
      labels:
        app: anki-sync-server-epacrnvz
    spec:
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: false
      containers:
        - name: anki-sync-server-epacrnvz
          image: ghcr.io/yangchuansheng/anki-sync-server:24.06.3
          env:
            - name: SYNC_USER1
              value: user:pass
            - name: MAX_SYNC_PAYLOAD_MEGS
              value: '100'
            - name: SYNC_BASE
              value: /syncserver
          resources:
            requests:
              cpu: 10m
              memory: 6Mi
            limits:
              cpu: 100m
              memory: 64Mi
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: vn-syncserver
              mountPath: /syncserver
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /syncserver
          value: '1'
        name: vn-syncserver
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: anki-sync-server-epacrnvz
  labels:
    cloud.sealos.io/app-deploy-manager: anki-sync-server-epacrnvz
    cloud.sealos.io/deploy-on-sealos: anki-sync-server-epacrnvz
spec:
  ports:
    - port: 8080
  selector:
    app: anki-sync-server-epacrnvz

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: anki-sync-server-epacrnvz
  labels:
    cloud.sealos.io/app-deploy-manager: anki-sync-server-epacrnvz
    cloud.sealos.io/app-deploy-manager-domain: hsaxfmwo
    cloud.sealos.io/deploy-on-sealos: anki-sync-server-epacrnvz
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: hsaxfmwo.sealoshzh.site
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: anki-sync-server-epacrnvz
                port:
                  number: 8080
  tls:
    - hosts:
        - hsaxfmwo.sealoshzh.site
      secretName: wildcard-cert
