apiVersion: app.sealos.io/v1
kind: Instance
metadata:
  name: frp-kriybrta
  labels:
    cloud.sealos.io/deploy-on-sealos: frp-kriybrta
spec:
  gitRepo: https://github.com/fatedier/frp
  templateType: inline
  categories:
    - tool
  defaults:
    app_host_admin:
      type: string
      value: frp-eabkifsg
    app_name:
      type: string
      value: frp-kriybrta
    app_host_http:
      type: string
      value: frp-azxjjmtr
    app_name1:
      type: string
      value: frp-upquvtpm
  inputs:
    ADMIN_USER:
      description: admin dashboard's username
      type: string
      default: admin
      required: true
    ADMIN_PASSWORD:
      description: admin dashboard's password
      type: string
      default: ''
      required: true
  title: frp
  url: https://github.com/fatedier/frp
  author: Sealos
  description: >-
    A fast reverse proxy to help you expose a local server behind a NAT or
    firewall to the internet.
  readme: >-
    https://cdn.jsdelivr.net/gh/labring-actions/templates@main/template/frp/README.md
  icon: https://cdn.jsdelivr.net/gh/fatedier/frp@dev/assets/frps/static/favicon.ico
  deployCount: 6

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frp-kriybrta
  labels:
    cloud.sealos.io/deploy-on-sealos: frp-kriybrta
data:
  vn-etcvn-frpvn-frpsvn-toml: >-
    # frps.toml


    bindPort = 7000

    vhostHTTPPort = 80


    # The default value is 127.0.0.1. Change it to 0.0.0.0 when you want to
    access it from a public network.

    webServer.addr = "0.0.0.0"

    webServer.port = 7500

    # dashboard's username and password are both optional

    webServer.user = "admin"

    webServer.password = ""


    enablePrometheus = true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frp-kriybrta
  annotations:
    originImageName: snowdreamtech/frps:0.59
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: frp-kriybrta
    app: frp-kriybrta
    cloud.sealos.io/deploy-on-sealos: frp-kriybrta
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: frp-kriybrta
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: frp-kriybrta
    spec:
      automountServiceAccountToken: false
      containers:
        - name: frp-kriybrta
          image: snowdreamtech/frps:0.59
          resources:
            requests:
              cpu: 10m
              memory: 12Mi
            limits:
              cpu: 100m
              memory: 128Mi
          ports:
            - containerPort: 7500
              name: admin
            - containerPort: 80
              name: http
            - containerPort: 7000
              name: server
            - containerPort: 22
              name: ssh
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: vn-etcvn-frpvn-frpsvn-toml
              mountPath: /etc/frp/frps.toml
              subPath: ./etc/frp/frps.toml
      volumes:
        - name: vn-etcvn-frpvn-frpsvn-toml
          configMap:
            name: frp-kriybrta
            items:
              - key: vn-etcvn-frpvn-frpsvn-toml
                path: ./etc/frp/frps.toml

---
apiVersion: v1
kind: Service
metadata:
  name: frp-kriybrta
  labels:
    cloud.sealos.io/app-deploy-manager: frp-kriybrta
    cloud.sealos.io/deploy-on-sealos: frp-kriybrta
spec:
  ports:
    - port: 7500
      targetPort: 7500
      name: admin
    - port: 80
      targetPort: 80
      name: http
  selector:
    app: frp-kriybrta

---
apiVersion: v1
kind: Service
metadata:
  name: frp-kriybrta-nodeport
  labels:
    cloud.sealos.io/app-deploy-manager: frp-kriybrta
    cloud.sealos.io/deploy-on-sealos: frp-kriybrta
spec:
  ports:
    - port: 7000
      targetPort: 7000
      name: server
    - port: 22
      targetPort: 22
      name: ssh
  selector:
    app: frp-kriybrta
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frp-kriybrta
  labels:
    cloud.sealos.io/app-deploy-manager: frp-kriybrta
    cloud.sealos.io/app-deploy-manager-domain: frp-eabkifsg
    cloud.sealos.io/deploy-on-sealos: frp-kriybrta
  annotations:
    higress.io/response-header-control-remove: X-Frame-Options
    higress.io/response-header-control-update: >
      Content-Security-Policy "default-src * blob: data: *.sealoshzh.site
      sealoshzh.site; img-src * data: blob: resource: *.sealoshzh.site
      sealoshzh.site; connect-src * wss: blob: resource:; style-src 'self'
      'unsafe-inline' blob: *.sealoshzh.site sealoshzh.site resource:;
      script-src 'self' 'unsafe-inline' 'unsafe-eval' blob: *.sealoshzh.site
      sealoshzh.site resource: *.baidu.com *.bdstatic.com; frame-src 'self'
      *.sealoshzh.site sealoshzh.site mailto: tel: weixin: mtt: *.baidu.com;
      frame-ancestors 'self' https://sealoshzh.site https://*.sealoshzh.site"

      X-Xss-Protection "1; mode=block"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: >
      more_clear_headers "X-Frame-Options:";

      more_set_headers "Content-Security-Policy: default-src * blob: data:
      *.sealoshzh.site sealoshzh.site; img-src * data: blob: resource:
      *.sealoshzh.site sealoshzh.site; connect-src * wss: blob: resource:;
      style-src 'self' 'unsafe-inline' blob: *.sealoshzh.site sealoshzh.site
      resource:; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob:
      *.sealoshzh.site sealoshzh.site resource: *.baidu.com *.bdstatic.com;
      frame-src 'self' *.sealoshzh.site sealoshzh.site mailto: tel: weixin: mtt:
      *.baidu.com; frame-ancestors 'self' https://sealoshzh.site
      https://*.sealoshzh.site";

      more_set_headers "X-Xss-Protection: 1; mode=block";

      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: frp-eabkifsg.sealoshzh.site
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: frp-kriybrta
                port:
                  number: 7500
  tls:
    - hosts:
        - frp-eabkifsg.sealoshzh.site
      secretName: wildcard-cert

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frp-upquvtpm
  labels:
    cloud.sealos.io/app-deploy-manager: frp-kriybrta
    cloud.sealos.io/app-deploy-manager-domain: frp-azxjjmtr
    cloud.sealos.io/deploy-on-sealos: frp-kriybrta
  annotations:
    higress.io/response-header-control-remove: X-Frame-Options
    higress.io/response-header-control-update: >
      Content-Security-Policy "default-src * blob: data: *.sealoshzh.site
      sealoshzh.site; img-src * data: blob: resource: *.sealoshzh.site
      sealoshzh.site; connect-src * wss: blob: resource:; style-src 'self'
      'unsafe-inline' blob: *.sealoshzh.site sealoshzh.site resource:;
      script-src 'self' 'unsafe-inline' 'unsafe-eval' blob: *.sealoshzh.site
      sealoshzh.site resource: *.baidu.com *.bdstatic.com; frame-src 'self'
      *.sealoshzh.site sealoshzh.site mailto: tel: weixin: mtt: *.baidu.com;
      frame-ancestors 'self' https://sealoshzh.site https://*.sealoshzh.site"

      X-Xss-Protection "1; mode=block"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: >
      more_clear_headers "X-Frame-Options:";

      more_set_headers "Content-Security-Policy: default-src * blob: data:
      *.sealoshzh.site sealoshzh.site; img-src * data: blob: resource:
      *.sealoshzh.site sealoshzh.site; connect-src * wss: blob: resource:;
      style-src 'self' 'unsafe-inline' blob: *.sealoshzh.site sealoshzh.site
      resource:; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob:
      *.sealoshzh.site sealoshzh.site resource: *.baidu.com *.bdstatic.com;
      frame-src 'self' *.sealoshzh.site sealoshzh.site mailto: tel: weixin: mtt:
      *.baidu.com; frame-ancestors 'self' https://sealoshzh.site
      https://*.sealoshzh.site";

      more_set_headers "X-Xss-Protection: 1; mode=block";

      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: frp-azxjjmtr.sealoshzh.site
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: frp-kriybrta
                port:
                  number: 80
  tls:
    - hosts:
        - frp-azxjjmtr.sealoshzh.site
      secretName: wildcard-cert

---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: frp-kriybrta
  labels:
    cloud.sealos.io/app-deploy-manager: frp-kriybrta
    cloud.sealos.io/deploy-on-sealos: frp-kriybrta
spec:
  data:
    url: https://frp-eabkifsg.sealoshzh.site
  displayType: normal
  icon: >-
    https://raw.githubusercontent.com/fatedier/frp/dev/assets/frps/static/favicon.ico
  name: frp
  type: iframe

---
apiVersion: batch/v1
kind: Job
metadata:
  name: frp-kriybrta-init
  labels:
    cloud.sealos.io/deploy-on-sealos: frp-kriybrta
spec:
  completions: 1
  template:
    spec:
      serviceAccountName: null
      serviceAccount: null
      containers:
        - name: switch-ports
          image: bitnami/kubectl:1.28.9
          command:
            - /bin/sh
            - '-c'
            - >
              SSH_PORT=`kubectl get svc frp-kriybrta-nodeport
              -o=jsonpath='{.spec.ports[?(@.name=="ssh")].nodePort}'`

              kubectl patch svc frp-kriybrta-nodeport --type='json' -p="[
                {\"op\": \"replace\", \"path\": \"/spec/ports/1/port\", \"value\": $SSH_PORT},
                {\"op\": \"replace\", \"path\": \"/spec/ports/1/targetPort\", \"value\": $SSH_PORT}
              ]"

              kubectl patch deployment frp-kriybrta --type='json' -p="[
                {
                  \"op\": \"replace\",
                  \"path\": \"/spec/template/spec/containers/0/ports/3\",
                  \"value\": {
                    \"containerPort\": $SSH_PORT,
                    \"name\": \"ssh\"
                  }
                }
              ]"
      restartPolicy: Never
  backoffLimit: 0
  ttlSecondsAfterFinished: 300
