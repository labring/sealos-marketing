apiVersion: app.sealos.io/v1
kind: Instance
metadata:
  name: flarum-uxtnzytw
  labels:
    cloud.sealos.io/deploy-on-sealos: flarum-uxtnzytw
spec:
  gitRepo: https://github.com/crazy-max/docker-flarum
  templateType: inline
  categories:
    - blog
  defaults:
    app_host:
      type: string
      value: ucfivysm
    app_name:
      type: string
      value: flarum-uxtnzytw
  inputs: {}
  title: Flarum
  description: Flarum is a delightfully simple discussion platform for your website.
  url: https://flarum.org/
  author: Sealos
  readme: https://cdn.jsdelivr.net/gh/crazy-max/docker-flarum@master/README.md
  icon: https://avatars.githubusercontent.com/u/5549034?s=48&v=4
  deployCount: 4

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: flarum-uxtnzytw-mysql
    app.kubernetes.io/instance: flarum-uxtnzytw-mysql
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: flarum-uxtnzytw
  name: flarum-uxtnzytw-mysql

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: apecloud-mysql
    clusterversion.kubeblocks.io/name: ac-mysql-8.0.30
    sealos-db-provider-cr: flarum-uxtnzytw-mysql
    cloud.sealos.io/deploy-on-sealos: flarum-uxtnzytw
  annotations: {}
  name: flarum-uxtnzytw-mysql
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: apecloud-mysql
  clusterVersionRef: ac-mysql-8.0.30
  componentSpecs:
    - componentDefRef: mysql
      monitor: true
      name: mysql
      replicas: 1
      resources:
        limits:
          cpu: 1000m
          memory: 1024Mi
        requests:
          cpu: 100m
          memory: 102Mi
      serviceAccountName: flarum-uxtnzytw-mysql
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 3Gi
            storageClassName: openebs-backup
  terminationPolicy: Delete
  tolerations: []

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: flarum-uxtnzytw-mysql
    app.kubernetes.io/instance: flarum-uxtnzytw-mysql
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: flarum-uxtnzytw
  name: flarum-uxtnzytw-mysql
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: flarum-uxtnzytw-mysql
    app.kubernetes.io/instance: flarum-uxtnzytw-mysql
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: flarum-uxtnzytw
  name: flarum-uxtnzytw-mysql
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: flarum-uxtnzytw-mysql
subjects:
  - kind: ServiceAccount
    name: flarum-uxtnzytw-mysql

---
apiVersion: batch/v1
kind: Job
metadata:
  name: flarum-uxtnzytw-mysql-init
  labels:
    cloud.sealos.io/deploy-on-sealos: flarum-uxtnzytw
spec:
  completions: 1
  template:
    spec:
      containers:
        - name: mysql-init
          image: joseluisq/mysql-client:8.0.30
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: flarum-uxtnzytw-mysql-conn-credential
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: flarum-uxtnzytw-mysql-conn-credential
                  key: password
            - name: MYSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: flarum-uxtnzytw-mysql-conn-credential
                  key: host
            - name: MYSQL_PORT
              valueFrom:
                secretKeyRef:
                  name: flarum-uxtnzytw-mysql-conn-credential
                  key: port
          command:
            - /bin/sh
            - '-c'
            - >
              until mysql -h $MYSQL_HOST -P $MYSQL_PORT -u $MYSQL_USER
              -p$MYSQL_PASSWORD -e 'CREATE DATABASE IF NOT EXISTS flarum;'; do
              sleep 1; done
      restartPolicy: Never
  backoffLimit: 0
  ttlSecondsAfterFinished: 300

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: flarum-uxtnzytw
  annotations:
    originImageName: crazymax/flarum:1.8.0
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: flarum-uxtnzytw
    app: flarum-uxtnzytw
    cloud.sealos.io/deploy-on-sealos: flarum-uxtnzytw
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: flarum-uxtnzytw
  selector:
    matchLabels:
      app: flarum-uxtnzytw
  template:
    metadata:
      labels:
        app: flarum-uxtnzytw
    spec:
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: false
      containers:
        - name: flarum-uxtnzytw
          image: crazymax/flarum:1.8.0
          env:
            - name: FLARUM_PORT
              valueFrom:
                secretKeyRef:
                  name: flarum-uxtnzytw-mysql-conn-credential
                  key: port
            - name: FLARUM_DEBUG
              value: 'false'
            - name: FLARUM_BASE_URL
              value: https://ucfivysm.sealoshzh.site
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: flarum-uxtnzytw-mysql-conn-credential
                  key: host
            - name: DB_NAME
              value: flarum
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: flarum-uxtnzytw-mysql-conn-credential
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: flarum-uxtnzytw-mysql-conn-credential
                  key: password
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: flarum-uxtnzytw-mysql-conn-credential
                  key: port
          resources:
            requests:
              cpu: 100m
              memory: 102Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
          command: []
          args: []
          ports:
            - containerPort: 8000
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: vn-rootvn-vn-flarum
              mountPath: /data
      volumes: []
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /data
          value: '1'
        name: vn-rootvn-vn-flarum
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: flarum-uxtnzytw
  labels:
    cloud.sealos.io/app-deploy-manager: flarum-uxtnzytw
    cloud.sealos.io/deploy-on-sealos: flarum-uxtnzytw
spec:
  ports:
    - port: 8000
  selector:
    app: flarum-uxtnzytw

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flarum-uxtnzytw
  labels:
    cloud.sealos.io/app-deploy-manager: flarum-uxtnzytw
    cloud.sealos.io/app-deploy-manager-domain: ucfivysm
    cloud.sealos.io/deploy-on-sealos: flarum-uxtnzytw
  annotations:
    higress.io/response-header-control-remove: X-Frame-Options
    higress.io/response-header-control-update: >
      Content-Security-Policy "default-src * blob: data: *.sealoshzh.site
      sealoshzh.site; img-src * data: blob: resource: *.sealoshzh.site
      sealoshzh.site; connect-src * wss: blob: resource:; style-src 'self'
      'unsafe-inline' blob: *.sealoshzh.site sealoshzh.site resource:;
      script-src 'self' 'unsafe-inline' 'unsafe-eval' blob: *.sealoshzh.site
      sealoshzh.site resource: *.baidu.com *.bdstatic.com; frame-src 'self'
      *.sealoshzh.site sealoshzh.site mailto: tel: weixin: mtt: *.baidu.com;
      frame-ancestors 'self' https://sealoshzh.site https://*.sealoshzh.site"

      X-Xss-Protection "1; mode=block"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: >
      more_clear_headers "X-Frame-Options:";

      more_set_headers "Content-Security-Policy: default-src * blob: data:
      *.sealoshzh.site sealoshzh.site; img-src * data: blob: resource:
      *.sealoshzh.site sealoshzh.site; connect-src * wss: blob: resource:;
      style-src 'self' 'unsafe-inline' blob: *.sealoshzh.site sealoshzh.site
      resource:; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob:
      *.sealoshzh.site sealoshzh.site resource: *.baidu.com *.bdstatic.com;
      frame-src 'self' *.sealoshzh.site sealoshzh.site mailto: tel: weixin: mtt:
      *.baidu.com; frame-ancestors 'self' https://sealoshzh.site
      https://*.sealoshzh.site";

      more_set_headers "X-Xss-Protection: 1; mode=block";

      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ucfivysm.sealoshzh.site
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: flarum-uxtnzytw
                port:
                  number: 8000
  tls:
    - hosts:
        - ucfivysm.sealoshzh.site
      secretName: wildcard-cert

---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: flarum-uxtnzytw
  labels:
    cloud.sealos.io/app-deploy-manager: flarum-uxtnzytw
    cloud.sealos.io/deploy-on-sealos: flarum-uxtnzytw
spec:
  data:
    url: https://ucfivysm.sealoshzh.site
  displayType: normal
  icon: https://avatars.githubusercontent.com/u/5549034?s=48&v=4
  name: Flarum
  type: iframe
