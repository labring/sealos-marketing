apiVersion: app.sealos.io/v1
kind: Instance
metadata:
  name: halo-ndtaxybj
  labels:
    cloud.sealos.io/deploy-on-sealos: halo-ndtaxybj
spec:
  gitRepo: https://github.com/halo-dev/halo
  templateType: inline
  categories:
    - blog
  defaults:
    app_host:
      type: string
      value: aqxmadsw
    app_name:
      type: string
      value: halo-ndtaxybj
  inputs: {}
  title: Halo
  url: https://halo.run/
  author: Sealos
  description: 强大易用的开源建站工具。
  readme: https://cdn.jsdelivr.net/gh/halo-dev/halo@main/README.md
  icon: https://www.halo.run/logo
  deployCount: 25

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: halo-ndtaxybj-pg
    app.kubernetes.io/instance: halo-ndtaxybj-pg
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: halo-ndtaxybj
  name: halo-ndtaxybj-pg

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: halo-ndtaxybj
  annotations:
    originImageName: halohub/halo:2.18.0
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: halo-ndtaxybj
    app: halo-ndtaxybj
    cloud.sealos.io/deploy-on-sealos: halo-ndtaxybj
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: halo-ndtaxybj
  selector:
    matchLabels:
      app: halo-ndtaxybj
  template:
    metadata:
      labels:
        app: halo-ndtaxybj
    spec:
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: false
      containers:
        - name: halo-ndtaxybj
          image: halohub/halo:2.18.0
          env:
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: halo-ndtaxybj-pg-conn-credential
                  key: password
            - name: PG_USERNAME
              valueFrom:
                secretKeyRef:
                  name: halo-ndtaxybj-pg-conn-credential
                  key: username
          resources:
            requests:
              cpu: 100m
              memory: 102Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
          command: []
          args:
            - >-
              --spring.r2dbc.url=r2dbc:pool:postgresql://halo-ndtaxybj-pg-postgresql..svc:5432/halo
            - '--spring.r2dbc.username=$(PG_USERNAME)'
            - '--spring.r2dbc.password=$(PG_PASSWORD)'
            - '--spring.sql.init.platform=postgresql'
            - '--halo.external-url=https://aqxmadsw.sealoshzh.site'
          ports:
            - containerPort: 8090
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: vn-rootvn-vn-halo2
              mountPath: /root/.halo2
          livenessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8090
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
      volumes: []
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /root/.halo2
          value: '1'
        name: vn-rootvn-vn-halo2
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: halo-ndtaxybj
  labels:
    cloud.sealos.io/app-deploy-manager: halo-ndtaxybj
    cloud.sealos.io/deploy-on-sealos: halo-ndtaxybj
spec:
  ports:
    - port: 8090
  selector:
    app: halo-ndtaxybj

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: halo-ndtaxybj
  labels:
    cloud.sealos.io/app-deploy-manager: halo-ndtaxybj
    cloud.sealos.io/app-deploy-manager-domain: aqxmadsw
    cloud.sealos.io/deploy-on-sealos: halo-ndtaxybj
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: aqxmadsw.sealoshzh.site
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: halo-ndtaxybj
                port:
                  number: 8090
  tls:
    - hosts:
        - aqxmadsw.sealoshzh.site
      secretName: wildcard-cert

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: postgresql
    clusterversion.kubeblocks.io/name: postgresql-14.8.0
    sealos-db-provider-cr: halo-ndtaxybj-pg
    cloud.sealos.io/deploy-on-sealos: halo-ndtaxybj
  annotations: {}
  name: halo-ndtaxybj-pg
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: postgresql
  clusterVersionRef: postgresql-14.8.0
  componentSpecs:
    - componentDefRef: postgresql
      monitor: true
      name: postgresql
      replicas: 1
      resources:
        limits:
          cpu: 1000m
          memory: 1024Mi
        requests:
          cpu: 100m
          memory: 102Mi
      serviceAccountName: halo-ndtaxybj-pg
      switchPolicy:
        type: Noop
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 3Gi
            storageClassName: openebs-backup
  terminationPolicy: Delete
  tolerations: []

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: halo-ndtaxybj-pg
    app.kubernetes.io/instance: halo-ndtaxybj-pg
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: halo-ndtaxybj
  name: halo-ndtaxybj-pg
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: halo-ndtaxybj-pg
    app.kubernetes.io/instance: halo-ndtaxybj-pg
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: halo-ndtaxybj
  name: halo-ndtaxybj-pg
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: halo-ndtaxybj-pg
subjects:
  - kind: ServiceAccount
    name: halo-ndtaxybj-pg

---
apiVersion: batch/v1
kind: Job
metadata:
  name: halo-ndtaxybj-pg-init
  labels:
    cloud.sealos.io/deploy-on-sealos: halo-ndtaxybj
spec:
  completions: 1
  template:
    spec:
      containers:
        - name: pgsql-init
          image: senzing/postgresql-client:2.2.4
          env:
            - name: PG_USERNAME
              valueFrom:
                secretKeyRef:
                  name: halo-ndtaxybj-pg-conn-credential
                  key: username
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: halo-ndtaxybj-pg-conn-credential
                  key: password
            - name: PG_PORT
              valueFrom:
                secretKeyRef:
                  name: halo-ndtaxybj-pg-conn-credential
                  key: port
            - name: DATABASE_URL
              value: >-
                postgresql://$(PG_USERNAME):$(PG_PASSWORD)@halo-ndtaxybj-pg-postgresql..svc:$(PG_PORT)
          command:
            - /bin/sh
            - '-c'
            - >
              until psql ${DATABASE_URL} -c 'CREATE DATABASE halo;' &>/dev/null;
              do sleep 1; done
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 51Mi
      restartPolicy: Never
  backoffLimit: 0
  ttlSecondsAfterFinished: 300
