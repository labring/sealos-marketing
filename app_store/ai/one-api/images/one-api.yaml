apiVersion: app.sealos.io/v1
kind: Instance
metadata:
  name: one-api-rhtxgzax
  labels:
    cloud.sealos.io/deploy-on-sealos: one-api-rhtxgzax
spec:
  gitRepo: https://github.com/songquanpeng/one-api
  templateType: inline
  categories:
    - ai
  defaults:
    app_host:
      type: string
      value: oafpdmiw
    app_name:
      type: string
      value: one-api-rhtxgzax
    session_secret:
      type: string
      value: puuxmzmx
  inputs: null
  title: one-api
  url: https://openai.justsong.cn/
  author: Sealos
  description: Access all LLM through the standard OpenAI API format, easy to deploy & use
  readme: https://cdn.jsdelivr.net/gh/songquanpeng/one-api@main/README.md
  icon: https://openai.justsong.cn/favicon.ico
  deployCount: 27

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: one-api-rhtxgzax-mysql
    app.kubernetes.io/instance: one-api-rhtxgzax-mysql
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: one-api-rhtxgzax
  name: one-api-rhtxgzax-mysql

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: one-api-rhtxgzax
  annotations:
    originImageName: justsong/one-api:v0.6.7
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: one-api-rhtxgzax
    app: one-api-rhtxgzax
    cloud.sealos.io/deploy-on-sealos: one-api-rhtxgzax
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: one-api-rhtxgzax
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  minReadySeconds: 10
  serviceName: one-api-rhtxgzax
  template:
    metadata:
      labels:
        app: one-api-rhtxgzax
    spec:
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: false
      containers:
        - name: one-api-rhtxgzax
          image: justsong/one-api:v0.6.7
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: one-api-rhtxgzax-mysql-conn-credential
                  key: password
            - name: SQL_DSN
              value: >-
                root:$(DB_PASSWORD)@tcp(one-api-rhtxgzax-mysql-mysql..svc:3306)/mydb
            - name: SESSION_SECRET
              value: puuxmzmx
            - name: SQL_MAX_IDLE_CONNS
              value: '60'
            - name: SQL_MAX_OPEN_CONNS
              value: '1000'
            - name: CHANNEL_TEST_FREQUENCY
              value: '30'
            - name: POLLING_INTERVAL
              value: '60'
            - name: BATCH_UPDATE_ENABLED
              value: 'true'
            - name: BATCH_UPDATE_INTERVAL
              value: '60'
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 51Mi
          command: []
          args: []
          ports:
            - containerPort: 3000
          imagePullPolicy: IfNotPresent
          volumeMounts: []
      volumes: []

---
apiVersion: v1
kind: Service
metadata:
  name: one-api-rhtxgzax
  labels:
    cloud.sealos.io/app-deploy-manager: one-api-rhtxgzax
    cloud.sealos.io/deploy-on-sealos: one-api-rhtxgzax
spec:
  ports:
    - port: 3000
  selector:
    app: one-api-rhtxgzax

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: one-api-rhtxgzax
  labels:
    cloud.sealos.io/app-deploy-manager: one-api-rhtxgzax
    cloud.sealos.io/app-deploy-manager-domain: oafpdmiw
    cloud.sealos.io/deploy-on-sealos: one-api-rhtxgzax
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: oafpdmiw.sealoshzh.site
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: one-api-rhtxgzax
                port:
                  number: 3000
  tls:
    - hosts:
        - oafpdmiw.sealoshzh.site
      secretName: wildcard-cert

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: apecloud-mysql
    clusterversion.kubeblocks.io/name: ac-mysql-8.0.30
    cloud.sealos.io/deploy-on-sealos: one-api-rhtxgzax
  name: one-api-rhtxgzax-mysql
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: apecloud-mysql
  clusterVersionRef: ac-mysql-8.0.30
  componentSpecs:
    - componentDefRef: mysql
      monitor: true
      name: mysql
      replicas: 3
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 51Mi
      serviceAccountName: one-api-rhtxgzax-mysql
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 3Gi
            storageClassName: openebs-backup
  terminationPolicy: Delete
  tolerations: []

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: one-api-rhtxgzax-mysql
    app.kubernetes.io/instance: one-api-rhtxgzax-mysql
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: one-api-rhtxgzax
  name: one-api-rhtxgzax-mysql
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: one-api-rhtxgzax-mysql
    app.kubernetes.io/instance: one-api-rhtxgzax-mysql
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: one-api-rhtxgzax
  name: one-api-rhtxgzax-mysql
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: one-api-rhtxgzax-mysql
subjects:
  - kind: ServiceAccount
    name: one-api-rhtxgzax-mysql

---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: one-api-rhtxgzax
  labels:
    cloud.sealos.io/app-deploy-manager: one-api-rhtxgzax
    cloud.sealos.io/deploy-on-sealos: one-api-rhtxgzax
spec:
  data:
    url: https://oafpdmiw.sealoshzh.site
  displayType: normal
  icon: >-
    https://raw.githubusercontent.com/songquanpeng/one-api/main/web/public/logo.png
  name: one-api-rhtxgzax
  type: iframe
